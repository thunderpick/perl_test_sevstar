% layout 'default';
% title 'Welcome';

% use Mojo::Util qw(b64_encode b64_decode);

%# TODO: Turn this shit into helper
% if (my $info = flash('info')) {
%= t 'div' => (class => "alert alert-info alert-dismissible fade show",  role => "alert") => begin
  %= t 'strong' => b($info)
  %= t 'button' => (type => 'button', class => 'btn-close', 'data-bs-dismiss' => "alert", 'aria-label' => 'Close')
% end
% }

% if (my $error = flash('error')) {
%= t 'div' => (class => "alert alert-error alert-dismissible fade show",  role => "alert") => begin
  %= t 'strong' => b($error)
  %= t 'button' => (type => 'button', class => 'btn-close', 'data-bs-dismiss' => "alert", 'aria-label' => 'Close')
% end
% }

% if (my $warning = flash('warning')) {
%= t 'div' => (class => "alert alert-warning alert-dismissible fade show",  role => "alert") => begin
  %= t 'strong' => b ($warning)
  %= t 'button' => (type => 'button', class => 'btn-close', 'data-bs-dismiss' => "alert", 'aria-label' => 'Close')
% end
% }

  % if (my $error = flash('error')) {
%= t 'div' => (class => "alert alert-error alert-dismissible fade show",  role => "alert") => begin
  %= t 'strong' => b ($error)
  %= t 'button' => (type => 'button', class => 'btn-close', 'data-bs-dismiss' => "alert", 'aria-label' => 'Close')
% end
% }

%= include '_form', model => {}, title => 'Add new url', return_to => '/'

%# TODO: Wrap table in something similar to GridView in Yii
%#       which is pretty cool, i think
<table class="table table-striped table-hover caption-top table-responsive ">
  <thead>
    <tr>
      <th scope="col">id</th>
      <th scope="col">location</th>
      <th scope="col">response code</th>
      <th scope="col">created_at</th>
      <th scope="col">updated_at</th>
      <th scope="col"></th>
    </tr>
  </thead>
  <tbody>
    % foreach my $row (@{stash('rows')}) {
      % my $class = 'table-default';
      % if($row->{code} >= 500) {
      %   $class = 'table-danger';
      % } elsif($row->{code} >= 400) {
      %   $class = 'table-warning';
      % } elsif($row->{code} >= 300) {
      %   $class = 'table-primary';
      % } else {
      %   $class = 'table-success';
      % }

      %= t 'tr' => (class => $class) => begin
        <th scope="row"><%= $row->{id} %></th>
        
        % $row->{location} = (new Mojo::URL($row->{location}))->userinfo(undef)->to_abs->to_string;
        % $row->{location} = length $row->{location} > 50 ? substr($row->{location}, 0, 50) . ' ...' : $row->{location};
        <td class="row-<%= $row->{id} %>" data="<%== b64_encode($row->{location}) %>"></td>
        %= javascript begin
        (function () {
          'use strict'

          var c = document.querySelectorAll('.row-<%= $row->{id} %>')
          Array.prototype.slice.call(c).forEach(function (cell) {
            var str = atob(cell.getAttribute('data'));
            cell.innerText = str;
          }, false)
        })()
        % end
        <td><%= $row->{code} || 'N/A' %></td>
        <td><%= $row->{created_at} %></td>
        <td><%= $row->{updated_at} %></td>
        <td class="col-md-1 text-end">
          
          %= form_for 'url.delete' => begin
            %= hidden_field id => $row->{id}
            <div class="btn-group btn-block" role="group" aria-label="Basic example">
                %= link_to(t('i', class => 'fa fa-eye') => url_for('url.detail', id => $row->{id}), class => 'btn btn-primary btn-sm')
                %= t 'button' => (class => 'btn btn-primary btn-sm') => t('i', class => 'fa fa-trash')
              </div>
          % end
        </td>
      % end
    % }
  </tbody>
</table>

%= include 'pager/_slide', page_info => $page_info

