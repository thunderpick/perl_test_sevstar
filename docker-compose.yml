# Using version 3 to provide play-with-docker badge
# You can change to version 2 without breaking.
#version: '2'
version: '3'
services:
  database:
    # Don't upgrade PostgreSQL by simply changing the version number
    # You need to migrate the Database to the new PostgreSQL version
    image: postgres:14.2-alpine
    #mem_limit: 256mb         # version 2 only
    #memswap_limit: 512mb     # version 2 only
    #read_only: true          # not supported in swarm mode please enable along with tmpfs
    #tmpfs:
    #  - /run/postgresql:size=512K
    #  - /tmp:size=256K
    environment:
      - POSTGRES_USER=sevstar
      - POSTGRES_PASSWORD=s3cr3t
      - POSTGRES_DB=sevstar
    volumes:
      - database:/var/lib/postgresql/data
    networks:
      backend:
    restart: always

  app:
    # Uncomment the following section to build the image yourself:
    # build:
    #  context: .
    #  dockerfile: Dockerfile
    #  args:
    #    - "VERSION=master"
    #    - "HEDGEDOC_REPOSITORY=https://github.com/hedgedoc/hedgedoc.git"
    image: perl
    #mem_limit: 256mb         # version 2 only
    #memswap_limit: 512mb     # version 2 only
    #read_only: true          # not supported in swarm mode, enable along with tmpfs
    #tmpfs:
    #  - /tmp:size=10M
    #  # Make sure you remove this when you use filesystem as upload type
    #  - /hedgedoc/public/uploads:size=10M
    environment:
      # **DB_URL** is formatted like: <databasetype>://<username>:<password>@<hostname>:<port>/<database>
      # Other examples are:
      # - mysql://hedgedoc:password@database:3306/hedgedoc
      # - sqlite:///data/sqlite.db (NOT RECOMMENDED)
      # - For details see the official sequelize docs: http://docs.sequelizejs.com/en/v3/
      - CMD_DB_URL=postgres://sevstar:s3cr3t@database:5432/sevstar
    volumes:
      - uploads:/root/app/public/uploads
      - ${PWD}:/root/app
    ports:
      # Ports that are published to the outside.
      # The latter port is the port inside the container. It should always stay on 3000
      # If you only specify a port it'll published on all interfaces. If you want to use a
      # local reverse proxy, you may want to listen on 127.0.0.1.
      # Example:
      # - "127.0.0.1:3000:3000"
      # - "3000:3000"
      - "80:80"
    networks:
      backend:
    restart: always
    depends_on:
      - database
    # command: bash -c "cpanm --installdeps -n /root/app && morbo -v -w /root/app/app.conf -w /root/app/public -w /root/app/templates /root/app/web.pl -l http://*:80"
    command: bash -c "cpanm --installdeps -n /root/app && hypnotoad /root/app/web.pl && perl /root/app/daemon.pl && tail -f /root/app/app.log"
# Define networks to allow best isolation
networks:
  # Internal network for communication with PostgreSQL/MySQL
  backend:

# Define named volumes so data stays in place
volumes:
  # Volume for PostgreSQL/MySQL database
  database:
  uploads: